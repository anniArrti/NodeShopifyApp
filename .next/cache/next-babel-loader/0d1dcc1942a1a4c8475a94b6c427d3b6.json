{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Frame, Spinner, Page, Card, Form, FormLayout, TextStyle, Checkbox, TextField, Button, Avatar, RangeSlider, DropZone, Stack, Thumbnail } from '@shopify/polaris';\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\nimport axios from 'axios';\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nclass Createbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handlecolorChange\", (ev, name) => {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        [name]: ev\n      }));\n    });\n\n    _defineProperty(this, \"handleSubmit\", ev => {\n      ev.preventDefault();\n      this.setState({\n        loading: true\n      });\n      let formData = new FormData();\n      formData.append('file', this.state.bg_img);\n      formData.append('name', this.state.name);\n      formData.append('goal', this.state.goal);\n      formData.append('intial_msg', this.state.intial_msg);\n      formData.append('progress_msg', this.progress_msg);\n      formData.append('opacity', this.state.opacity);\n      formData.append('achive_msg', this.state.achive_msg);\n      formData.append('spt_color', this.state.spt_color);\n      formData.append('bg_color', this.state.bg_color);\n      formData.append('txt_color', this.state.txt_color);\n      axios.post('/createbar', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(function (response) {\n        console.log(response);\n        this.setState({\n          loading: false\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleDropZoneDrop\", ev => {\n      console.log(ev);\n      this.setState({\n        filename: ev[0]\n      });\n      this.createImage(ev[0]);\n    });\n\n    this.state = {\n      open: false,\n      selectedItems: [],\n      items: [],\n      spt_color: '#000000',\n      txt_color: '#000000',\n      bg_color: '#000000',\n      opacity: 0,\n      bg_img: '',\n      filename: '',\n      name: '',\n      goal: '',\n      intial_msg: '',\n      progress_msg: '',\n      achive_msg: '',\n      loading: true\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handlecolorChange = this.handlecolorChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: false\n    }); // axios.get('/allbars').then(response => {\n    //   console.log(response);\n    //     this.setState({\n    //       items: response.data\n    //     })\n    //   })\n  }\n\n  render() {\n    const {\n      spt_color,\n      txt_color,\n      bg_color,\n      opacity,\n      loading,\n      filename,\n      bg_img,\n      name,\n      goal,\n      intial_msg,\n      progress_msg,\n      achive_msg\n    } = this.state;\n\n    const fileUpload = !this.state.bg_img && __jsx(DropZone.FileUpload, null);\n\n    const uploadedFile = bg_img && __jsx(Stack, null, __jsx(Thumbnail, {\n      size: \"small\",\n      alt: filename.name,\n      source: \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\n    }), __jsx(\"div\", null, filename.name));\n\n    return __jsx(Frame, null, __jsx(Page, {\n      title: \"Create New Bar\",\n      primaryAction: {\n        content: 'Cancle',\n        url: '/'\n      }\n    }, loading ? __jsx(Card, null, __jsx(\"div\", {\n      className: \"spinner-cls\"\n    }, __jsx(Spinner, {\n      accessibilityLabel: \"Spinner example\",\n      size: \"large\",\n      color: \"teal\"\n    }))) : __jsx(Form, {\n      onSubmit: this.handleSubmit\n    }, __jsx(Card, {\n      sectioned: true,\n      title: \"Style Configuration\"\n    }, __jsx(Card.Section, null, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n      value: bg_color,\n      onChange: ev => this.handlecolorChange(ev, 'bg_color'),\n      label: \"Background Color\",\n      type: \"color\"\n    }), __jsx(TextField, {\n      value: txt_color,\n      onChange: ev => this.handlecolorChange(ev, 'txt_color'),\n      label: \"Text Color\",\n      type: \"color\"\n    }), __jsx(TextField, {\n      value: spt_color,\n      onChange: ev => this.handlecolorChange(ev, 'spt_color'),\n      label: \"Special Text Color\",\n      type: \"color\"\n    })), __jsx(RangeSlider, {\n      label: \"Background Color Opacity\",\n      value: opacity,\n      onChange: ev => this.handlecolorChange(ev, 'opacity'),\n      min: 0,\n      max: 9,\n      output: true,\n      helpText: __jsx(\"span\", null, \"The range is from 0 to 1,0 = transparent and 1 = solid\")\n    }), __jsx(DropZone, {\n      onDrop: this.handleDropZoneDrop\n    }, uploadedFile, fileUpload)))), __jsx(Card, {\n      title: \"Content Configuration\"\n    }, __jsx(Card.Section, null, __jsx(FormLayout, null, __jsx(TextField, {\n      value: name,\n      onChange: ev => this.handlecolorChange(ev, 'name'),\n      label: \"Name\",\n      type: \"text\"\n    }), __jsx(TextField, {\n      value: goal,\n      onChange: ev => this.handlecolorChange(ev, 'goal'),\n      label: \"Free Shipping Goal\",\n      type: \"text\"\n    }), __jsx(TextField, {\n      value: intial_msg,\n      onChange: ev => this.handlecolorChange(ev, 'intial_msg'),\n      label: \"Initial Message\",\n      type: \"text\"\n    }), __jsx(TextField, {\n      value: progress_msg,\n      onChange: ev => this.handlecolorChange(ev, 'progress_msg'),\n      label: \"Progress Message\",\n      type: \"text\"\n    }), __jsx(TextField, {\n      value: achive_msg,\n      onChange: ev => this.handlecolorChange(ev, 'achive_msg'),\n      label: \"Goal Achieved Message\",\n      type: \"text\"\n    }))), __jsx(Card.Section, null, __jsx(Button, {\n      submit: true,\n      primary: true\n    }, \"Submit\"))))));\n  }\n\n  createImage(file) {\n    let reader = new FileReader();\n\n    reader.onload = e => {\n      this.setState({\n        bg_img: e.target.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n}\n\nexport default Createbar;","map":{"version":3,"sources":["C:/Users/g/Desktop/laravel/nodeshopifyapp/pages/createbar.js"],"names":["Frame","Spinner","Page","Card","Form","FormLayout","TextStyle","Checkbox","TextField","Button","Avatar","RangeSlider","DropZone","Stack","Thumbnail","ResourcePicker","TitleBar","axios","img","Createbar","React","Component","constructor","props","ev","name","setState","state","preventDefault","loading","formData","FormData","append","bg_img","goal","intial_msg","progress_msg","opacity","achive_msg","spt_color","bg_color","txt_color","post","headers","then","response","console","log","filename","createImage","open","selectedItems","items","handleSubmit","bind","handlecolorChange","componentDidMount","render","fileUpload","uploadedFile","content","url","handleDropZoneDrop","file","reader","FileReader","onload","e","target","result","readAsDataURL"],"mappings":"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","sourcesContent":["import { Frame, Spinner, Page,Card, Form, FormLayout,TextStyle,Checkbox,\r\n  TextField,Button, Avatar, RangeSlider, DropZone,Stack,Thumbnail} from '@shopify/polaris';\r\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\r\nimport axios from 'axios';\r\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\r\n\r\nclass Createbar extends React.Component {\r\n  constructor(props) {\r\n  super(props);\r\n  this.state = { open: false, selectedItems: [], items:[],\r\n  spt_color:'#000000',\r\n  txt_color:'#000000',\r\n  bg_color:'#000000',\r\n  opacity:0,\r\n  bg_img:'',\r\n  filename:'',\r\n  name:'',\r\n  goal:'',\r\n  intial_msg:'',\r\n  progress_msg:'',\r\n  achive_msg:'',\r\n  loading : true };\r\n this.handleSubmit = this.handleSubmit.bind(this);\r\n this.handlecolorChange = this.handlecolorChange.bind(this);\r\n}\r\ncomponentDidMount(){\r\n  this.setState({loading: false});\r\n  // axios.get('/allbars').then(response => {\r\n  //   console.log(response);\r\n  //     this.setState({\r\n  //       items: response.data\r\n  //     })\r\n  //   })\r\n}\r\n  render() {\r\n    const {spt_color,txt_color,bg_color,opacity,loading,filename,bg_img,name,goal,intial_msg,progress_msg,achive_msg} = this.state;\r\n    const fileUpload = !this.state.bg_img && <DropZone.FileUpload />;\r\n    const uploadedFile = bg_img && (<Stack><Thumbnail\r\n        size=\"small\"\r\n        alt={filename.name}\r\n        source='https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304'\r\n        />\r\n        <div>\r\n          {filename.name}\r\n        </div>\r\n      </Stack>);\r\n    return (\r\n      <Frame>\r\n      <Page title=\"Create New Bar\"\r\n          primaryAction={{\r\n            content: 'Cancle',\r\n            url: '/'\r\n          }}\r\n          >\r\n          {loading ? (<Card><div className=\"spinner-cls\">\r\n                    <Spinner accessibilityLabel=\"Spinner example\" size=\"large\" color=\"teal\"/>\r\n                    </div></Card>):\r\n      (<Form onSubmit={this.handleSubmit}>\r\n        <Card sectioned title=\"Style Configuration\">\r\n          <Card.Section >\r\n          <FormLayout>\r\n            <FormLayout.Group>\r\n            <TextField\r\n            value={bg_color}\r\n            onChange={(ev) =>this.handlecolorChange(ev, 'bg_color')}\r\n            label=\"Background Color\"\r\n            type=\"color\"\r\n          />\r\n          <TextField\r\n            value={txt_color}\r\n            onChange={(ev) =>this.handlecolorChange(ev, 'txt_color')}\r\n            label=\"Text Color\"\r\n            type=\"color\"\r\n          />\r\n          <TextField\r\n            value={spt_color}\r\n            onChange={(ev) =>this.handlecolorChange(ev, 'spt_color')}\r\n            label=\"Special Text Color\"\r\n            type=\"color\"\r\n          />\r\n      </FormLayout.Group>\r\n      <RangeSlider\r\n        label=\"Background Color Opacity\"\r\n        value={opacity}\r\n        onChange={(ev) =>this.handlecolorChange(ev, 'opacity')}\r\n        min={0}\r\n        max={9}\r\n        output\r\n        helpText={\r\n              <span>\r\n                The range is from 0 to 1,0 = transparent and 1 = solid\r\n               </span>\r\n            }\r\n      />\r\n      <DropZone onDrop={this.handleDropZoneDrop}>\r\n      {uploadedFile}\r\n      {fileUpload}\r\n      </DropZone>\r\n      </FormLayout>\r\n      </Card.Section>\r\n      </Card>\r\n      <Card title=\"Content Configuration\">\r\n        <Card.Section >\r\n          <FormLayout>\r\n            <TextField\r\n            value={name}\r\n            onChange={(ev) =>this.handlecolorChange(ev, 'name')}\r\n            label=\"Name\"\r\n            type=\"text\"\r\n          />\r\n          <TextField\r\n            value={goal}\r\n            onChange={(ev) =>this.handlecolorChange(ev, 'goal')}\r\n            label=\"Free Shipping Goal\"\r\n            type=\"text\"\r\n          />\r\n          <TextField\r\n            value={intial_msg}\r\n            onChange={(ev) =>this.handlecolorChange(ev, 'intial_msg')}\r\n            label=\"Initial Message\"\r\n            type=\"text\"\r\n          />\r\n          <TextField\r\n            value={progress_msg}\r\n            onChange={(ev) =>this.handlecolorChange(ev, 'progress_msg')}\r\n            label=\"Progress Message\"\r\n            type=\"text\"\r\n          />\r\n          <TextField\r\n            value={achive_msg}\r\n            onChange={(ev) =>this.handlecolorChange(ev, 'achive_msg')}\r\n            label=\"Goal Achieved Message\"\r\n            type=\"text\"\r\n          />\r\n        </FormLayout>\r\n      </Card.Section>\r\n      <Card.Section>\r\n      <Button submit primary>Submit</Button>\r\n      </Card.Section>\r\n    \r\n    </Card>\r\n    </Form>)}\r\n    </Page>\r\n    </Frame>\r\n        )\r\n      }\r\n  handlecolorChange = (ev, name) =>{\r\n    this.setState({\r\n    ...this.state,\r\n    [name]: ev\r\n  });\r\n  }\r\n  handleSubmit = (ev) =>{\r\n    ev.preventDefault();\r\n    this.setState({ loading : true});\r\n    let formData = new FormData();\r\n    formData.append('file', this.state.bg_img);\r\n    formData.append('name', this.state.name);\r\n    formData.append('goal', this.state.goal);\r\n    formData.append('intial_msg', this.state.intial_msg);\r\n    formData.append('progress_msg', this.progress_msg);\r\n    formData.append('opacity', this.state.opacity);\r\n    formData.append('achive_msg', this.state.achive_msg);\r\n    formData.append('spt_color', this.state.spt_color);\r\n    formData.append('bg_color', this.state.bg_color);\r\n    formData.append('txt_color', this.state.txt_color);\r\n    axios.post('/createbar', formData,\r\n             {\r\n                headers: {\r\n                  'Content-Type': 'multipart/form-data'\r\n                }\r\n             })\r\n             .then(function (response) {\r\n              console.log(response);\r\n              this.setState({ loading : false});\r\n             });\r\n  }\r\n  handleDropZoneDrop= (ev) =>{\r\n    console.log(ev);\r\n    this.setState({ filename : ev[0]});\r\n    this.createImage(ev[0]);\r\n  }\r\n  createImage(file) {\r\n    let reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      this.setState({\r\n        bg_img: e.target.result\r\n      })\r\n    };\r\n    reader.readAsDataURL(file);  \r\n  }\r\n  }\r\nexport default Createbar;"]},"metadata":{},"sourceType":"module"}