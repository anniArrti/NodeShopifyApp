{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { AppProvider, ContextualSaveBar, Frame, Spinner, Page, Card, Form, FormLayout, TextStyle, Checkbox, TextField, Button, Avatar, RangeSlider, DropZone, Stack, Thumbnail } from '@shopify/polaris';\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\nimport axios from 'axios';\nimport Router from 'next/router';\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\nimport Cookies from 'js-cookie';\nimport translations from '@shopify/polaris/locales/en.json';\n\nclass Createbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handlecolorChange\", (ev, name) => {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        [name]: ev,\n        contentsaver: true\n      }));\n    });\n\n    _defineProperty(this, \"getone\", id => {\n      console.log(id);\n      axios.get('/getonebar', {\n        params: {\n          id: id\n        }\n      }).then(response => {\n        this.setState({\n          items: response.data[0],\n          id: response.data[0].id,\n          spt_color: response.data[0].spt_color,\n          txt_color: response.data[0].txt_color,\n          bg_color: response.data[0].bg_color,\n          opacity: response.data[0].opacity,\n          bg_img: response.data[0].bg_img,\n          name: response.data[0].name,\n          goal: response.data[0].goal,\n          padding: response.data[0].padding,\n          font_size: response.data[0].font_size,\n          intial_msg: response.data[0].intial_msg,\n          progress_msg: response.data[0].progress_msg,\n          achive_msg: response.data[0].achive_msg,\n          loading: false\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleSubmit\", () => {\n      if (this.state.name == '' || this.state.intial_msg == '' || this.state.goal == '') {\n        return false;\n      }\n\n      this.setState({\n        loading: true,\n        btnload: true,\n        pagebutton: true\n      });\n      let formData = new FormData();\n      formData.append('file', this.state.bg_img);\n      formData.append('id', this.state.id);\n      formData.append('name', this.state.name);\n      formData.append('goal', this.state.goal);\n      formData.append('intial_msg', this.state.intial_msg);\n      formData.append('progress_msg', this.state.progress_msg);\n      formData.append('opacity', this.state.opacity);\n      formData.append('achive_msg', this.state.achive_msg);\n      formData.append('spt_color', this.state.spt_color);\n      formData.append('bg_color', this.state.bg_color);\n      formData.append('txt_color', this.state.txt_color);\n      var that = this;\n      axios.post('/createbar', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(function (response) {\n        Router.push('/'); //that.setState({ loading : false});\n        //router.push('/');\n      });\n    });\n\n    _defineProperty(this, \"handleDropZoneDrop\", ev => {\n      this.setState({\n        filename: ev[0]\n      });\n      this.createImage(ev[0]);\n    });\n\n    _defineProperty(this, \"createnewbar\", () => {\n      this.setState({\n        loading: true\n      });\n      let path = '/';\n      Router.push(path);\n    });\n\n    _defineProperty(this, \"deletebar\", () => {\n      let path = '/';\n      Router.push(path);\n    });\n\n    _defineProperty(this, \"discard\", () => {\n      this.setState({\n        contentsaver: false\n      });\n    });\n\n    this.state = {\n      items: [],\n      id: '',\n      spt_color: '#000000',\n      txt_color: '#000000',\n      bg_color: '#000000',\n      opacity: 0,\n      bg_img: '',\n      filename: '',\n      name: '',\n      goal: '',\n      intial_msg: '',\n      progress_msg: '',\n      achive_msg: '',\n      loading: true,\n      contentsaver: false,\n      btnload: false,\n      pagebutton: false,\n      padding: '7',\n      font_size: '16'\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handlecolorChange = this.handlecolorChange.bind(this);\n  }\n\n  async componentDidMount() {\n    const id = localStorage.getItem('bar_id');\n    this.setState({\n      loading: true\n    });\n    const data = await this.getone(id);\n  }\n\n  render() {\n    const {\n      contentsaver,\n      pagebutton,\n      btnload,\n      spt_color,\n      txt_color,\n      padding,\n      font_size,\n      bg_color,\n      opacity,\n      loading,\n      filename,\n      bg_img,\n      name,\n      goal,\n      intial_msg,\n      progress_msg,\n      achive_msg\n    } = this.state;\n\n    const fileUpload = !this.state.bg_img && __jsx(DropZone.FileUpload, null);\n\n    let title = '';\n\n    if (name) {\n      title = 'Edit ' + name;\n    }\n\n    const uploadedFile = bg_img && __jsx(Stack, null, __jsx(Thumbnail, {\n      size: \"small\",\n      alt: filename.name,\n      source: \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\n    }), __jsx(\"div\", null, filename.name));\n\n    return __jsx(AppProvider, {\n      i18n: {\n        Polaris: {\n          Frame: {\n            skipToContent: 'Skip to content'\n          },\n          ContextualSaveBar: {\n            save: 'Save',\n            discard: 'Discard'\n          }\n        }\n      }\n    }, __jsx(Frame, null, contentsaver ? __jsx(ContextualSaveBar, {\n      message: \"Unsaved changes\",\n      saveAction: {\n        onAction: () => this.handleSubmit(),\n        loading: btnload,\n        disabled: false\n      },\n      discardAction: {\n        onAction: () => this.discard()\n      }\n    }) : '', __jsx(Page, {\n      title: title,\n      primaryAction: {\n        content: 'Cancel',\n        disabled: pagebutton,\n        onAction: () => this.createnewbar()\n      }\n    }, loading ? __jsx(Card, null, __jsx(\"div\", {\n      className: \"spinner-cls\",\n      style: {\n        textAlign: \"center\",\n        padding: \"20px\"\n      }\n    }, __jsx(Spinner, {\n      accessibilityLabel: \"Spinner example\",\n      size: \"large\",\n      color: \"teal\"\n    }))) : __jsx(Form, null, __jsx(Card, {\n      sectioned: true,\n      title: \"Style Configuration\"\n    }, __jsx(Card.Section, null, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n      value: bg_color,\n      onChange: ev => this.handlecolorChange(ev, 'bg_color'),\n      label: \"Background Color\",\n      type: \"color\"\n    }), __jsx(TextField, {\n      value: txt_color,\n      onChange: ev => this.handlecolorChange(ev, 'txt_color'),\n      label: \"Text Color\",\n      type: \"color\"\n    }), __jsx(TextField, {\n      value: spt_color,\n      onChange: ev => this.handlecolorChange(ev, 'spt_color'),\n      label: \"Special Text Color\",\n      type: \"color\"\n    }))), __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n      value: font_size,\n      onChange: ev => this.handlecolorChange(ev, 'font_size'),\n      label: \"Font Size\",\n      type: \"text\"\n    }), __jsx(TextField, {\n      value: padding,\n      onChange: ev => this.handlecolorChange(ev, 'padding'),\n      label: \"Padding\",\n      type: \"text\"\n    }))), __jsx(FormLayout, null, __jsx(RangeSlider, {\n      label: \"Background Color Opacity\",\n      value: opacity,\n      onChange: ev => this.handlecolorChange(ev, 'opacity'),\n      min: 0,\n      max: 9,\n      output: true,\n      helpText: __jsx(\"span\", null, \"The range is from 0 to 1,0 = transparent and 1 = solid\")\n    }), __jsx(DropZone, {\n      onDrop: this.handleDropZoneDrop\n    }, uploadedFile, fileUpload)))), __jsx(Card, {\n      title: \"Content Configuration\"\n    }, __jsx(Card.Section, null, __jsx(FormLayout, null, __jsx(TextField, {\n      value: name,\n      onChange: ev => this.handlecolorChange(ev, 'name'),\n      label: \"Name\",\n      type: \"text\"\n    }), __jsx(TextField, {\n      value: goal,\n      onChange: ev => this.handlecolorChange(ev, 'goal'),\n      label: \"Free Shipping Goal\",\n      type: \"text\"\n    }), __jsx(TextField, {\n      value: intial_msg,\n      onChange: ev => this.handlecolorChange(ev, 'intial_msg'),\n      label: \"Initial Message\",\n      type: \"text\"\n    }), __jsx(TextField, {\n      value: progress_msg,\n      onChange: ev => this.handlecolorChange(ev, 'progress_msg'),\n      label: \"Progress Message\",\n      type: \"text\"\n    }), __jsx(TextField, {\n      value: achive_msg,\n      onChange: ev => this.handlecolorChange(ev, 'achive_msg'),\n      label: \"Goal Achieved Message\",\n      type: \"text\"\n    }))))))));\n  }\n\n  createImage(file) {\n    let reader = new FileReader();\n\n    reader.onload = e => {\n      this.setState({\n        bg_img: e.target.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n}\n\nexport default Createbar;","map":{"version":3,"sources":["C:/Users/g/Desktop/laravel/nodeshopifyapp/pages/editbar.js"],"names":["AppProvider","ContextualSaveBar","Frame","Spinner","Page","Card","Form","FormLayout","TextStyle","Checkbox","TextField","Button","Avatar","RangeSlider","DropZone","Stack","Thumbnail","ResourcePicker","TitleBar","axios","Router","img","Cookies","translations","Createbar","React","Component","constructor","props","ev","name","setState","state","contentsaver","id","console","log","get","params","then","response","items","data","spt_color","txt_color","bg_color","opacity","bg_img","goal","padding","font_size","intial_msg","progress_msg","achive_msg","loading","btnload","pagebutton","formData","FormData","append","that","post","headers","push","filename","createImage","path","handleSubmit","bind","handlecolorChange","componentDidMount","localStorage","getItem","getone","render","fileUpload","title","uploadedFile","Polaris","skipToContent","save","discard","onAction","disabled","content","createnewbar","textAlign","handleDropZoneDrop","file","reader","FileReader","onload","e","target","result","readAsDataURL"],"mappings":";;;;;;;;;AAAA,SAASA,WAAT,EAAqBC,iBAArB,EAAuCC,KAAvC,EAA8CC,OAA9C,EAAuDC,IAAvD,EAA4DC,IAA5D,EAAkEC,IAAlE,EAAwEC,UAAxE,EAAmFC,SAAnF,EAA6FC,QAA7F,EACEC,SADF,EACYC,MADZ,EACoBC,MADpB,EAC4BC,WAD5B,EACyCC,QADzC,EACkDC,KADlD,EACwDC,SADxD,QACwE,kBADxE;AAEA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,2BAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,MAAMC,GAAG,GAAG,mEAAZ;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;AACA,MAAMC,SAAN,SAAwBC,KAAK,CAACC,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;;AADmB,+CAwLC,CAACC,EAAD,EAAKC,IAAL,KAAa;AAC/B,WAAKC,QAAL,iCACG,KAAKC,KADR;AAEA,SAACF,IAAD,GAAQD,EAFR;AAGAI,QAAAA,YAAY,EAAE;AAHd;AAKD,KA9LkB;;AAAA,oCA+LTC,EAAD,IAAO;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAf,MAAAA,KAAK,CAACkB,GAAN,CAAU,YAAV,EAAwB;AAACC,QAAAA,MAAM,EAAE;AAAEJ,UAAAA,EAAE,EAAEA;AAAN;AAAT,OAAxB,EAA8CK,IAA9C,CAAmDC,QAAQ,IAAI;AAC7D,aAAKT,QAAL,CAAc;AACZU,UAAAA,KAAK,EAAED,QAAQ,CAACE,IAAT,CAAc,CAAd,CADK;AAEZR,UAAAA,EAAE,EAACM,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBR,EAFR;AAGZS,UAAAA,SAAS,EAACH,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBC,SAHf;AAIZC,UAAAA,SAAS,EAACJ,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBE,SAJf;AAKZC,UAAAA,QAAQ,EAACL,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBG,QALd;AAMZC,UAAAA,OAAO,EAACN,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBI,OANb;AAOZC,UAAAA,MAAM,EAACP,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBK,MAPZ;AAQZjB,UAAAA,IAAI,EAACU,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBZ,IARV;AASZkB,UAAAA,IAAI,EAACR,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBM,IATV;AAUZC,UAAAA,OAAO,EAACT,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBO,OAVb;AAWZC,UAAAA,SAAS,EAACV,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBQ,SAXf;AAYZC,UAAAA,UAAU,EAACX,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBS,UAZhB;AAaZC,UAAAA,YAAY,EAACZ,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBU,YAblB;AAcZC,UAAAA,UAAU,EAACb,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBW,UAdhB;AAeZC,UAAAA,OAAO,EAAE;AAfG,SAAd;AAiBD,OAlBD;AAmBD,KApNkB;;AAAA,0CAqNJ,MAAK;AAClB,UAAG,KAAKtB,KAAL,CAAWF,IAAX,IAAmB,EAAnB,IAAyB,KAAKE,KAAL,CAAWmB,UAAX,IAAwB,EAAjD,IAAuD,KAAKnB,KAAL,CAAWgB,IAAX,IAAkB,EAA5E,EAA+E;AAC7E,eAAO,KAAP;AACD;;AACD,WAAKjB,QAAL,CAAc;AAAEuB,QAAAA,OAAO,EAAG,IAAZ;AAAkBC,QAAAA,OAAO,EAAC,IAA1B;AAAgCC,QAAAA,UAAU,EAAE;AAA5C,OAAd;AACA,UAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAK3B,KAAL,CAAWe,MAAnC;AACAU,MAAAA,QAAQ,CAACE,MAAT,CAAgB,IAAhB,EAAsB,KAAK3B,KAAL,CAAWE,EAAjC;AACAuB,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAK3B,KAAL,CAAWF,IAAnC;AACA2B,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAK3B,KAAL,CAAWgB,IAAnC;AACAS,MAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B,KAAK3B,KAAL,CAAWmB,UAAzC;AACAM,MAAAA,QAAQ,CAACE,MAAT,CAAgB,cAAhB,EAAgC,KAAK3B,KAAL,CAAWoB,YAA3C;AACAK,MAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B,KAAK3B,KAAL,CAAWc,OAAtC;AACAW,MAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B,KAAK3B,KAAL,CAAWqB,UAAzC;AACAI,MAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6B,KAAK3B,KAAL,CAAWW,SAAxC;AACAc,MAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B,KAAK3B,KAAL,CAAWa,QAAvC;AACAY,MAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6B,KAAK3B,KAAL,CAAWY,SAAxC;AACA,UAAIgB,IAAI,GAAG,IAAX;AACAzC,MAAAA,KAAK,CAAC0C,IAAN,CAAW,YAAX,EAAyBJ,QAAzB,EACS;AACGK,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADZ,OADT,EAMUvB,IANV,CAMe,UAAUC,QAAV,EAAoB;AACzBpB,QAAAA,MAAM,CAAC2C,IAAP,CAAY,GAAZ,EADyB,CAEzB;AACA;AACA,OAVV;AAWD,KAlPkB;;AAAA,gDAmPElC,EAAD,IAAO;AACzB,WAAKE,QAAL,CAAc;AAAEiC,QAAAA,QAAQ,EAAGnC,EAAE,CAAC,CAAD;AAAf,OAAd;AACA,WAAKoC,WAAL,CAAiBpC,EAAE,CAAC,CAAD,CAAnB;AACD,KAtPkB;;AAAA,0CAgQL,MAAK;AACjB,WAAKE,QAAL,CAAc;AACVuB,QAAAA,OAAO,EAAE;AADC,OAAd;AAGA,UAAIY,IAAI,GAAG,GAAX;AACA9C,MAAAA,MAAM,CAAC2C,IAAP,CAAYG,IAAZ;AACD,KAtQkB;;AAAA,uCAuQR,MAAK;AACd,UAAIA,IAAI,GAAG,GAAX;AACA9C,MAAAA,MAAM,CAAC2C,IAAP,CAAYG,IAAZ;AACD,KA1QkB;;AAAA,qCA2QV,MAAK;AACZ,WAAKnC,QAAL,CAAc;AAAEE,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD,KA7QkB;;AAEnB,SAAKD,KAAL,GAAa;AAAES,MAAAA,KAAK,EAAC,EAAR;AACbP,MAAAA,EAAE,EAAC,EADU;AAEbS,MAAAA,SAAS,EAAC,SAFG;AAGbC,MAAAA,SAAS,EAAC,SAHG;AAIbC,MAAAA,QAAQ,EAAC,SAJI;AAKbC,MAAAA,OAAO,EAAC,CALK;AAMbC,MAAAA,MAAM,EAAC,EANM;AAObiB,MAAAA,QAAQ,EAAC,EAPI;AAQblC,MAAAA,IAAI,EAAC,EARQ;AASbkB,MAAAA,IAAI,EAAC,EATQ;AAUbG,MAAAA,UAAU,EAAC,EAVE;AAWbC,MAAAA,YAAY,EAAC,EAXA;AAYbC,MAAAA,UAAU,EAAC,EAZE;AAabC,MAAAA,OAAO,EAAG,IAbG;AAcbrB,MAAAA,YAAY,EAAE,KAdD;AAebsB,MAAAA,OAAO,EAAC,KAfK;AAgBbC,MAAAA,UAAU,EAAE,KAhBC;AAiBbP,MAAAA,OAAO,EAAC,GAjBK;AAkBbC,MAAAA,SAAS,EAAE;AAlBE,KAAb;AAmBD,SAAKiB,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA;;AACD,QAAME,iBAAN,GAAyB;AACvB,UAAMpC,EAAE,GAAGqC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX;AACA,SAAKzC,QAAL,CAAc;AAACuB,MAAAA,OAAO,EAAE;AAAV,KAAd;AACA,UAAMZ,IAAI,GAAG,MAAM,KAAK+B,MAAL,CAAYvC,EAAZ,CAAnB;AACD;;AACCwC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACzC,MAAAA,YAAD;AAAcuB,MAAAA,UAAd;AAAyBD,MAAAA,OAAzB;AAAiCZ,MAAAA,SAAjC;AAA2CC,MAAAA,SAA3C;AAAqDK,MAAAA,OAArD;AAA6DC,MAAAA,SAA7D;AAAuEL,MAAAA,QAAvE;AAAgFC,MAAAA,OAAhF;AAAwFQ,MAAAA,OAAxF;AAAgGU,MAAAA,QAAhG;AAAyGjB,MAAAA,MAAzG;AAAgHjB,MAAAA,IAAhH;AAAqHkB,MAAAA,IAArH;AAA0HG,MAAAA,UAA1H;AAAqIC,MAAAA,YAArI;AAAkJC,MAAAA;AAAlJ,QAAgK,KAAKrB,KAA3K;;AACA,UAAM2C,UAAU,GAAG,CAAC,KAAK3C,KAAL,CAAWe,MAAZ,IAAsB,MAAC,QAAD,CAAU,UAAV,OAAzC;;AACA,QAAI6B,KAAK,GAAE,EAAX;;AACA,QAAG9C,IAAH,EAAQ;AACN8C,MAAAA,KAAK,GAAG,UAAS9C,IAAjB;AACD;;AACD,UAAM+C,YAAY,GAAG9B,MAAM,IAAK,MAAC,KAAD,QAAO,MAAC,SAAD;AACnC,MAAA,IAAI,EAAC,OAD8B;AAEnC,MAAA,GAAG,EAAEiB,QAAQ,CAAClC,IAFqB;AAGnC,MAAA,MAAM,EAAC;AAH4B,MAAP,EAK5B,mBACGkC,QAAQ,CAAClC,IADZ,CAL4B,CAAhC;;AASA,WACE,MAAC,WAAD;AAAa,MAAA,IAAI,EAAE;AAACgD,QAAAA,OAAO,EAAE;AAAE5E,UAAAA,KAAK,EAAE;AAClC6E,YAAAA,aAAa,EAAE;AADmB,WAAT;AAG3B9E,UAAAA,iBAAiB,EAAE;AACjB+E,YAAAA,IAAI,EAAE,MADW;AAEjBC,YAAAA,OAAO,EAAE;AAFQ;AAHQ;AAAV;AAAnB,OASA,MAAC,KAAD,QACEhD,YAAY,GAAI,MAAC,iBAAD;AACR,MAAA,OAAO,EAAC,iBADA;AAER,MAAA,UAAU,EAAE;AACViD,QAAAA,QAAQ,EAAE,MAAM,KAAKf,YAAL,EADN;AAEVb,QAAAA,OAAO,EAAEC,OAFC;AAGV4B,QAAAA,QAAQ,EAAE;AAHA,OAFJ;AAOR,MAAA,aAAa,EAAE;AACbD,QAAAA,QAAQ,EAAE,MAAM,KAAKD,OAAL;AADH;AAPP,MAAJ,GAUD,EAXb,EAYI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,KAAb;AACE,MAAA,aAAa,EAAE;AACbQ,QAAAA,OAAO,EAAE,QADI;AAEbD,QAAAA,QAAQ,EAAE3B,UAFG;AAGb0B,QAAAA,QAAQ,EAAE,MAAM,KAAKG,YAAL;AAHH;AADjB,OAQC/B,OAAO,GAAI,MAAC,IAAD,QAAM;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,KAAK,EAAE;AAACgC,QAAAA,SAAS,EAAE,QAAZ;AAAsBrC,QAAAA,OAAO,EAAE;AAA/B;AAApC,OACR,MAAC,OAAD;AAAS,MAAA,kBAAkB,EAAC,iBAA5B;AAA8C,MAAA,IAAI,EAAC,OAAnD;AAA2D,MAAA,KAAK,EAAC;AAAjE,MADQ,CAAN,CAAJ,GAGX,MAAC,IAAD,QACC,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,KAAK,EAAC;AAAtB,OACE,MAAC,IAAD,CAAM,OAAN,QACA,MAAC,UAAD,QACE,MAAC,UAAD,CAAY,KAAZ,QACA,MAAC,SAAD;AACA,MAAA,KAAK,EAAEJ,QADP;AAEA,MAAA,QAAQ,EAAGhB,EAAD,IAAO,KAAKwC,iBAAL,CAAuBxC,EAAvB,EAA2B,UAA3B,CAFjB;AAGA,MAAA,KAAK,EAAC,kBAHN;AAIA,MAAA,IAAI,EAAC;AAJL,MADA,EAOF,MAAC,SAAD;AACE,MAAA,KAAK,EAAEe,SADT;AAEE,MAAA,QAAQ,EAAGf,EAAD,IAAO,KAAKwC,iBAAL,CAAuBxC,EAAvB,EAA2B,WAA3B,CAFnB;AAGE,MAAA,KAAK,EAAC,YAHR;AAIE,MAAA,IAAI,EAAC;AAJP,MAPE,EAaF,MAAC,SAAD;AACE,MAAA,KAAK,EAAEc,SADT;AAEE,MAAA,QAAQ,EAAGd,EAAD,IAAO,KAAKwC,iBAAL,CAAuBxC,EAAvB,EAA2B,WAA3B,CAFnB;AAGE,MAAA,KAAK,EAAC,oBAHR;AAIE,MAAA,IAAI,EAAC;AAJP,MAbE,CADF,CADA,EAuBJ,MAAC,UAAD,QACE,MAAC,UAAD,CAAY,KAAZ,QACE,MAAC,SAAD;AACE,MAAA,KAAK,EAAEqB,SADT;AAEE,MAAA,QAAQ,EAAGrB,EAAD,IAAO,KAAKwC,iBAAL,CAAuBxC,EAAvB,EAA2B,WAA3B,CAFnB;AAGE,MAAA,KAAK,EAAC,WAHR;AAIE,MAAA,IAAI,EAAC;AAJP,MADF,EAOE,MAAC,SAAD;AACE,MAAA,KAAK,EAAEoB,OADT;AAEE,MAAA,QAAQ,EAAGpB,EAAD,IAAO,KAAKwC,iBAAL,CAAuBxC,EAAvB,EAA2B,SAA3B,CAFnB;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,IAAI,EAAC;AAJP,MAPF,CADF,CAvBI,EAuCJ,MAAC,UAAD,QACA,MAAC,WAAD;AACE,MAAA,KAAK,EAAC,0BADR;AAEE,MAAA,KAAK,EAAEiB,OAFT;AAGE,MAAA,QAAQ,EAAGjB,EAAD,IAAO,KAAKwC,iBAAL,CAAuBxC,EAAvB,EAA2B,SAA3B,CAHnB;AAIE,MAAA,GAAG,EAAE,CAJP;AAKE,MAAA,GAAG,EAAE,CALP;AAME,MAAA,MAAM,MANR;AAOE,MAAA,QAAQ,EACF;AARR,MADA,EAcA,MAAC,QAAD;AAAU,MAAA,MAAM,EAAE,KAAK0D;AAAvB,OACCV,YADD,EAECF,UAFD,CAdA,CAvCI,CADF,CADD,EA8DD,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC;AAAZ,OACE,MAAC,IAAD,CAAM,OAAN,QACE,MAAC,UAAD,QACE,MAAC,SAAD;AACA,MAAA,KAAK,EAAE7C,IADP;AAEA,MAAA,QAAQ,EAAGD,EAAD,IAAO,KAAKwC,iBAAL,CAAuBxC,EAAvB,EAA2B,MAA3B,CAFjB;AAGA,MAAA,KAAK,EAAC,MAHN;AAIA,MAAA,IAAI,EAAC;AAJL,MADF,EAOA,MAAC,SAAD;AACE,MAAA,KAAK,EAAEmB,IADT;AAEE,MAAA,QAAQ,EAAGnB,EAAD,IAAO,KAAKwC,iBAAL,CAAuBxC,EAAvB,EAA2B,MAA3B,CAFnB;AAGE,MAAA,KAAK,EAAC,oBAHR;AAIE,MAAA,IAAI,EAAC;AAJP,MAPA,EAaA,MAAC,SAAD;AACE,MAAA,KAAK,EAAEsB,UADT;AAEE,MAAA,QAAQ,EAAGtB,EAAD,IAAO,KAAKwC,iBAAL,CAAuBxC,EAAvB,EAA2B,YAA3B,CAFnB;AAGE,MAAA,KAAK,EAAC,iBAHR;AAIE,MAAA,IAAI,EAAC;AAJP,MAbA,EAmBA,MAAC,SAAD;AACE,MAAA,KAAK,EAAEuB,YADT;AAEE,MAAA,QAAQ,EAAGvB,EAAD,IAAO,KAAKwC,iBAAL,CAAuBxC,EAAvB,EAA2B,cAA3B,CAFnB;AAGE,MAAA,KAAK,EAAC,kBAHR;AAIE,MAAA,IAAI,EAAC;AAJP,MAnBA,EAyBA,MAAC,SAAD;AACE,MAAA,KAAK,EAAEwB,UADT;AAEE,MAAA,QAAQ,EAAGxB,EAAD,IAAO,KAAKwC,iBAAL,CAAuBxC,EAAvB,EAA2B,YAA3B,CAFnB;AAGE,MAAA,KAAK,EAAC,uBAHR;AAIE,MAAA,IAAI,EAAC;AAJP,MAzBA,CADF,CADF,CA9DC,CAXG,CAZJ,CATA,CADF;AA0IG;;AAgELoC,EAAAA,WAAW,CAACuB,IAAD,EAAO;AAChB,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAiBC,CAAD,IAAO;AACrB,WAAK7D,QAAL,CAAc;AACZgB,QAAAA,MAAM,EAAE6C,CAAC,CAACC,MAAF,CAASC;AADL,OAAd;AAGD,KAJD;;AAKAL,IAAAA,MAAM,CAACM,aAAP,CAAqBP,IAArB;AACD;;AAhQqC;;AAgRxC,eAAehE,SAAf","sourcesContent":["import { AppProvider,ContextualSaveBar,Frame, Spinner, Page,Card, Form, FormLayout,TextStyle,Checkbox,\r\n  TextField,Button, Avatar, RangeSlider, DropZone,Stack,Thumbnail} from '@shopify/polaris';\r\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\r\nimport axios from 'axios';\r\nimport Router from 'next/router'\r\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\r\nimport Cookies from 'js-cookie';\r\nimport translations from '@shopify/polaris/locales/en.json';\r\nclass Createbar extends React.Component {\r\n  constructor(props) {\r\n  super(props);\r\n  this.state = { items:[],\r\n  id:'',\r\n  spt_color:'#000000',\r\n  txt_color:'#000000',\r\n  bg_color:'#000000',\r\n  opacity:0,\r\n  bg_img:'',\r\n  filename:'',\r\n  name:'',\r\n  goal:'',\r\n  intial_msg:'',\r\n  progress_msg:'',\r\n  achive_msg:'',\r\n  loading : true,\r\n  contentsaver: false ,\r\n  btnload:false,\r\n  pagebutton: false,\r\n  padding:'7',\r\n  font_size: '16'};\r\n this.handleSubmit = this.handleSubmit.bind(this);\r\n this.handlecolorChange = this.handlecolorChange.bind(this);\r\n}\r\nasync componentDidMount(){\r\n  const id = localStorage.getItem('bar_id');\r\n  this.setState({loading: true});\r\n  const data = await this.getone(id);\r\n}\r\n  render() {\r\n    const {contentsaver,pagebutton,btnload,spt_color,txt_color,padding,font_size,bg_color,opacity,loading,filename,bg_img,name,goal,intial_msg,progress_msg,achive_msg} = this.state;\r\n    const fileUpload = !this.state.bg_img && <DropZone.FileUpload />;\r\n    let title ='';\r\n    if(name){\r\n      title = 'Edit '+ name;\r\n    }\r\n    const uploadedFile = bg_img && (<Stack><Thumbnail\r\n        size=\"small\"\r\n        alt={filename.name}\r\n        source='https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304'\r\n        />\r\n        <div>\r\n          {filename.name}\r\n        </div>\r\n      </Stack>);\r\n    return (\r\n      <AppProvider i18n={{Polaris: { Frame: {\r\n          skipToContent: 'Skip to content',\r\n        },\r\n        ContextualSaveBar: {\r\n          save: 'Save',\r\n          discard: 'Discard',\r\n        },\r\n      },\r\n    }}>\r\n      <Frame>\r\n      { contentsaver ? (<ContextualSaveBar \r\n                message=\"Unsaved changes\"\r\n                saveAction={{\r\n                  onAction: () => this.handleSubmit(),\r\n                  loading: btnload,\r\n                  disabled: false,\r\n                }}\r\n                discardAction={{\r\n                  onAction: () => this.discard(),\r\n                }}\r\n              />): ''}\r\n          <Page title={title}\r\n            primaryAction={{\r\n              content: 'Cancel',\r\n              disabled: pagebutton,\r\n              onAction: () => this.createnewbar()\r\n            }\r\n          }\r\n          >\r\n          {loading ? (<Card><div className=\"spinner-cls\" style={{textAlign: \"center\", padding: \"20px\"}}>\r\n                    <Spinner accessibilityLabel=\"Spinner example\" size=\"large\" color=\"teal\"/>\r\n                    </div></Card>):\r\n      (<Form>\r\n        <Card sectioned title=\"Style Configuration\">\r\n          <Card.Section >\r\n          <FormLayout>\r\n            <FormLayout.Group>\r\n            <TextField\r\n            value={bg_color}\r\n            onChange={(ev) =>this.handlecolorChange(ev, 'bg_color')}\r\n            label=\"Background Color\"\r\n            type=\"color\"\r\n          />\r\n          <TextField\r\n            value={txt_color}\r\n            onChange={(ev) =>this.handlecolorChange(ev, 'txt_color')}\r\n            label=\"Text Color\"\r\n            type=\"color\"\r\n          />\r\n          <TextField\r\n            value={spt_color}\r\n            onChange={(ev) =>this.handlecolorChange(ev, 'spt_color')}\r\n            label=\"Special Text Color\"\r\n            type=\"color\"\r\n          />\r\n      </FormLayout.Group>\r\n      </FormLayout>\r\n      <FormLayout>\r\n        <FormLayout.Group>\r\n          <TextField\r\n            value={font_size}\r\n            onChange={(ev) =>this.handlecolorChange(ev, 'font_size')}\r\n            label=\"Font Size\"\r\n            type=\"text\"\r\n          />\r\n          <TextField\r\n            value={padding}\r\n            onChange={(ev) =>this.handlecolorChange(ev, 'padding')}\r\n            label=\"Padding\"\r\n            type=\"text\"\r\n          />\r\n        </FormLayout.Group>\r\n      </FormLayout>\r\n      <FormLayout>\r\n      <RangeSlider\r\n        label=\"Background Color Opacity\"\r\n        value={opacity}\r\n        onChange={(ev) =>this.handlecolorChange(ev, 'opacity')}\r\n        min={0}\r\n        max={9}\r\n        output\r\n        helpText={\r\n              <span>\r\n                The range is from 0 to 1,0 = transparent and 1 = solid\r\n               </span>\r\n            }\r\n      />\r\n      <DropZone onDrop={this.handleDropZoneDrop}>\r\n      {uploadedFile}\r\n      {fileUpload}\r\n      </DropZone>\r\n      </FormLayout>\r\n      </Card.Section>\r\n      </Card>\r\n      <Card title=\"Content Configuration\">\r\n        <Card.Section >\r\n          <FormLayout>\r\n            <TextField\r\n            value={name}\r\n            onChange={(ev) =>this.handlecolorChange(ev, 'name')}\r\n            label=\"Name\"\r\n            type=\"text\"\r\n          />\r\n          <TextField\r\n            value={goal}\r\n            onChange={(ev) =>this.handlecolorChange(ev, 'goal')}\r\n            label=\"Free Shipping Goal\"\r\n            type=\"text\"\r\n          />\r\n          <TextField\r\n            value={intial_msg}\r\n            onChange={(ev) =>this.handlecolorChange(ev, 'intial_msg')}\r\n            label=\"Initial Message\"\r\n            type=\"text\"\r\n          />\r\n          <TextField\r\n            value={progress_msg}\r\n            onChange={(ev) =>this.handlecolorChange(ev, 'progress_msg')}\r\n            label=\"Progress Message\"\r\n            type=\"text\"\r\n          />\r\n          <TextField\r\n            value={achive_msg}\r\n            onChange={(ev) =>this.handlecolorChange(ev, 'achive_msg')}\r\n            label=\"Goal Achieved Message\"\r\n            type=\"text\"\r\n          />\r\n        </FormLayout>\r\n      </Card.Section>\r\n    \r\n    </Card>\r\n    </Form>\r\n    )}\r\n    </Page>\r\n    </Frame>\r\n    </AppProvider>\r\n        )\r\n      }\r\n  handlecolorChange = (ev, name) =>{\r\n    this.setState({\r\n    ...this.state,\r\n    [name]: ev,\r\n    contentsaver: true\r\n  });\r\n  }\r\n  getone = (id) =>{\r\n    console.log(id);\r\n    axios.get('/getonebar', {params: { id: id }}).then(response => {\r\n      this.setState({\r\n        items: response.data[0],\r\n        id:response.data[0].id,\r\n        spt_color:response.data[0].spt_color,\r\n        txt_color:response.data[0].txt_color,\r\n        bg_color:response.data[0].bg_color,\r\n        opacity:response.data[0].opacity,\r\n        bg_img:response.data[0].bg_img,\r\n        name:response.data[0].name,\r\n        goal:response.data[0].goal,\r\n        padding:response.data[0].padding,\r\n        font_size:response.data[0].font_size,\r\n        intial_msg:response.data[0].intial_msg,\r\n        progress_msg:response.data[0].progress_msg,\r\n        achive_msg:response.data[0].achive_msg,\r\n        loading: false\r\n      })\r\n    })\r\n  }\r\n  handleSubmit = () =>{\r\n    if(this.state.name == '' || this.state.intial_msg== '' || this.state.goal== ''){\r\n      return false;\r\n    }\r\n    this.setState({ loading : true, btnload:true, pagebutton: true});\r\n    let formData = new FormData();\r\n    formData.append('file', this.state.bg_img);\r\n    formData.append('id', this.state.id);\r\n    formData.append('name', this.state.name);\r\n    formData.append('goal', this.state.goal);\r\n    formData.append('intial_msg', this.state.intial_msg);\r\n    formData.append('progress_msg', this.state.progress_msg);\r\n    formData.append('opacity', this.state.opacity);\r\n    formData.append('achive_msg', this.state.achive_msg);\r\n    formData.append('spt_color', this.state.spt_color);\r\n    formData.append('bg_color', this.state.bg_color);\r\n    formData.append('txt_color', this.state.txt_color);\r\n    var that = this;\r\n    axios.post('/createbar', formData,\r\n             {\r\n                headers: {\r\n                  'Content-Type': 'multipart/form-data'\r\n                }\r\n             })\r\n             .then(function (response) {\r\n              Router.push('/');\r\n              //that.setState({ loading : false});\r\n              //router.push('/');\r\n             });\r\n  }\r\n  handleDropZoneDrop= (ev) =>{\r\n    this.setState({ filename : ev[0]});\r\n    this.createImage(ev[0]);\r\n  }\r\n  createImage(file) {\r\n    let reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      this.setState({\r\n        bg_img: e.target.result\r\n      })\r\n    };\r\n    reader.readAsDataURL(file);  \r\n  }\r\n  createnewbar= () =>{\r\n    this.setState({\r\n        loading: true\r\n      });\r\n    let path = '/';\r\n    Router.push(path);\r\n  }\r\n  deletebar= () =>{\r\n    let path = '/';\r\n    Router.push(path);\r\n  }\r\n  discard= () =>{\r\n    this.setState({ contentsaver: false });\r\n  }\r\n  }\r\nexport default Createbar;"]},"metadata":{},"sourceType":"module"}